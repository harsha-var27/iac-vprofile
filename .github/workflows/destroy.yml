name: Vprofile Terraform Destroy

on:
  workflow_dispatch: # Allows manual triggering from the Git associating the changes with the commit that introduced them, making it easier to track the context of the destroy action.

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
  BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE }}
  AWS_REGION: us-east-1
  EKS_CLUSTER: vprofile-eks

jobs:
  terraform-destroy:
    name: Destroy Terraform Resources
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.3

      - name: Terraform Init
        id: init
        run: terraform init -backend-config="bucket=$BUCKET_TF_STATE"

      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Terraform Plan Destroy
        id: plan-destroy
        run: terraform plan -destroy -input=false -out tfplan-destroy
        continue-on-error: true

      - name: Terraform Plan Destroy Status
        if: steps.plan-destroy.outcome == 'failure'
        run: exit 1

      - name: Terraform Destroy
        id: destroy
        run: terraform destroy -auto-approve -input=false